kube-prometheus-stack:
  grafana:
    enabled: true
    defaultDashboardsEnabled: true
    adminPassword: StronkPassword

    plugins:
      - grafana-piechart-panel

    # persistence:
    #   type: pvc
    #   enabled: true
    #   # storageClassName: default
    #   accessModes:
    #     - ReadWriteOnce
    #   size: 2Gi

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            isDefault: false
            type: prometheus
            url: http://kube-prometheus-stack-prometheus:9090
          # - name: Loki
          #   type: loki
          #   url: http://loki-stack:3100
          # - name: Tempo
          #   type: tempo
          #   uid: tempo
          #   url: http://tempo-gateway.tempo
          #   jsonData:
          #     serviceMap:
          #       httpMethod: GET
          #       datasourceUid: Prometheus
          #     search:
          #       hide: false
          #     nodeGraph:
          #       enabled: true

    ingress:
      ## If true, Grafana Ingress will be created
      ##
      enabled: true
      ingressClassName: nginx
      ## Annotations for Grafana Ingress
      ##
      annotations:
        
        cert-manager.io/cluster-issuer: "letsencrypt-prod"

      ## Labels to be added to the Ingress
      ##
      labels: {}

      ## Hostnames.
      ## Must be provided if Ingress is enable.
      ##
      # hosts:
      #   - grafana.domain.com
      hosts:
        - grafana.devops.chancode.click

      ## Path for grafana ingress
      path: /

      ## TLS configuration for grafana Ingress
      ## Secret must be manually created in the namespace
      ##
      tls:
        - secretName: grafana-devops-tls
          hosts:
            - grafana.devops.chancode.click

    grafana.ini:
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      server:
        root_url: https://grafana.devops.chancode.click
        disable_login_form: false

  prometheus:
    enable: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      hosts:
        - prometheus.devops.chancode.click
      path:
        - /
      pathType: Prefix
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.devops.chancode.click
    prometheusSpec:
      externalLabels:
        cluster: devops
      retention: 7d
      serviceMonitorSelectorNilUsesHelmValues: false
      # storageSpec:
      #   volumeClaimTemplate:
      #     spec:
      #       accessModes: ["ReadWriteOnce"]
      #       resources:
      #         requests:
      #           storage: 20Gi
metrics-server:
  replicas: 1
  metrics:
    enabled: true
  serviceMonitor:
    enabled: true
